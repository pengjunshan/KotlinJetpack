plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"
    viewBinding {
        enabled = true
    }
    dataBinding{
        enabled = true
    }
    defaultConfig {
        applicationId "com.example.kotlinjetpack"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //设置 Schema 的位置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]//指定数据库schema导出的位置
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.core:core-ktx:1.5.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //由于LifecycleService存在于扩展包中，所以，首先我们需要在app的build.gradle文件中添加依赖：
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //使用 DefaultLifecycleObserver 需要用到 Java8，我们首先添加依赖
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    // room
    implementation 'androidx.room:room-runtime:2.2.6'
    kapt "androidx.room:room-compiler:2.2.6"

}